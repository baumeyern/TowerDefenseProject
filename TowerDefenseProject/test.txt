import React, { useEffect, useRef } from 'react';
import { Link } from 'react-router-dom';
import Button from 'react-bootstrap/Button';


let x =0;
export default function GameBoard(){
    const canvasRef = useRef(null);

    useEffect(() => {
        const render = () =>{
        const canvas = canvasRef.current;
        const ctx = canvas.getContext('2d');
        ctx.beginPath();
        ctx.arc(x,75,50,0,2 * Math.PI);
        ctx.stroke();
        requestAnimationFrame(render);
        };
        render();
    }, []);

    return <canvas id="canvas"  ref={canvasRef} height="650px"  width="490px" />;
}


 ctx.clearRect(0, 0, canvas.width, canvas.height);
        for(var i=25; i< canvas.width; i+= 30){
            //verticle lines
            ctx.moveTo(i,25);
            ctx.lineTo(i,1995);

            //horizontal lines
            ctx.moveTo(25,i);
            ctx.lineTo(1995,i);

            ctx.strokeStyle = "22ccff";
            ctx.stroke();
        }

        //major units
        ctx.beginPath();
        for(var i=25; i<canvas.height; i+=150){
            //verticle lines
            ctx.moveTo(i,25);
            ctx.lineTo(i,1995);

            //horizontal lines
            ctx.moveTo(25,i);
            ctx.lineTo(1995,i);

            ctx.strokeStyle = "c0c0c0";
            ctx.stroke();
        }